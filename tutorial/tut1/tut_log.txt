[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] seed value set to 10
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] verbose_level set to 2
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] dfile set to device-model.dot
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] afile set to application.dot
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] pfac_mul set to 1.1
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] hfac_mul set to 2
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] drc is false with verboisty level 0
[2024-11-08 23:24:43.647] [UGRAMM] [info] [CONFIG] config file set to config.json
[2024-11-08 23:24:43.647] [UGRAMM] [info] Parsed JSON file {"lock-nodes":["Input1::IO1","Input2::IO2"]} 
[2024-11-08 23:24:43.647] [UGRAMM] [info] Normalized JSON {"LOCK-NODES":["INPUT1::IO1","INPUT2::IO2"]} 
[2024-11-08 23:24:43.648] [UGRAMM] [trace]  Device model pragma READ from the dot file :: {
    "GATE" : ["AND"],
    "IO" : ["INPUT", "OUTPUT"]
}

GATE : [ "AND" ]
IO : [ "INPUT" "OUTPUT" ]
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO1.INPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO1.INPINA :: arch_NodeCell PINCELL :: arch_NodeType IN
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[0] IO1.INPINA :: gNamesInv[IO1.INPINA] 0
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 1 :: gNameInv 1 :: gNameInv_FuncCell size() 0
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO1 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO1 :: arch_NodeCell FUNCCELL :: arch_NodeType IO
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[1] IO1 :: gNamesInv[IO1] 1 :: gNamesInv_FuncCell[IO1] 1
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 2 :: gNameInv size 2 :: gNameInv_FuncCell size 1
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of GATE1 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName GATE1 :: arch_NodeCell FUNCCELL :: arch_NodeType GATE
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[2] GATE1 :: gNamesInv[GATE1] 2 :: gNamesInv_FuncCell[GATE1] 2
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 3 :: gNameInv size 3 :: gNameInv_FuncCell size 2
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of GATE1.OUTPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName GATE1.OUTPINA :: arch_NodeCell PINCELL :: arch_NodeType OUT
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[3] GATE1.OUTPINA :: gNamesInv[GATE1.OUTPINA] 3
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 4 :: gNameInv 4 :: gNameInv_FuncCell size() 2
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of REG1 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName REG1 :: arch_NodeCell ROUTECELL :: arch_NodeType REG
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[4] REG1 :: gNamesInv[REG1] 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 5 :: gNameInv 5 :: gNameInv_FuncCell size() 2
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO3.INPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO3.INPINA :: arch_NodeCell PINCELL :: arch_NodeType IN
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[5] IO3.INPINA :: gNamesInv[IO3.INPINA] 5
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 6 :: gNameInv 6 :: gNameInv_FuncCell size() 2
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO3 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO3 :: arch_NodeCell FUNCCELL :: arch_NodeType IO
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[6] IO3 :: gNamesInv[IO3] 6 :: gNamesInv_FuncCell[IO3] 6
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 7 :: gNameInv size 7 :: gNameInv_FuncCell size 3
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO3.OUTPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO3.OUTPINA :: arch_NodeCell PINCELL :: arch_NodeType OUT
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[7] IO3.OUTPINA :: gNamesInv[IO3.OUTPINA] 7
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 8 :: gNameInv 8 :: gNameInv_FuncCell size() 3
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO1.OUTPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO1.OUTPINA :: arch_NodeCell PINCELL :: arch_NodeType OUT
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[8] IO1.OUTPINA :: gNamesInv[IO1.OUTPINA] 8
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 9 :: gNameInv 9 :: gNameInv_FuncCell size() 3
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO2.INPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO2.INPINA :: arch_NodeCell PINCELL :: arch_NodeType IN
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[9] IO2.INPINA :: gNamesInv[IO2.INPINA] 9
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 10 :: gNameInv 10 :: gNameInv_FuncCell size() 3
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO2 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO2 :: arch_NodeCell FUNCCELL :: arch_NodeType IO
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[10] IO2 :: gNamesInv[IO2] 10 :: gNamesInv_FuncCell[IO2] 10
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 11 :: gNameInv size 11 :: gNameInv_FuncCell size 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of IO2.OUTPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName IO2.OUTPINA :: arch_NodeCell PINCELL :: arch_NodeType OUT
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[11] IO2.OUTPINA :: gNamesInv[IO2.OUTPINA] 11
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 12 :: gNameInv 12 :: gNameInv_FuncCell size() 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of MUX1 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName MUX1 :: arch_NodeCell ROUTECELL :: arch_NodeType MUX
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[12] MUX1 :: gNamesInv[MUX1] 12
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 13 :: gNameInv 13 :: gNameInv_FuncCell size() 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of MUX2 = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName MUX2 :: arch_NodeCell ROUTECELL :: arch_NodeType MUX
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[13] MUX2 :: gNamesInv[MUX2] 13
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 14 :: gNameInv 14 :: gNameInv_FuncCell size() 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of GATE1.INPINA = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName GATE1.INPINA :: arch_NodeCell PINCELL :: arch_NodeType IN
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[14] GATE1.INPINA :: gNamesInv[GATE1.INPINA] 14
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 15 :: gNameInv 15 :: gNameInv_FuncCell size() 4
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] Width of GATE1.INPINB = 32
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] arch_NodeName GATE1.INPINB :: arch_NodeCell PINCELL :: arch_NodeType IN
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gNames[15] GATE1.INPINB :: gNamesInv[GATE1.INPINB] 15
[2024-11-08 23:24:43.649] [UGRAMM] [trace] [G] gName size 16 :: gNameInv 16 :: gNameInv_FuncCell size() 4
[2024-11-08 23:24:43.649] [UGRAMM] [info] [H] Compatibility of pragma for GATE passed
[2024-11-08 23:24:43.649] [UGRAMM] [info] [H] Compatibility of pragma for IO passed
[2024-11-08 23:24:43.650] [UGRAMM] [trace] hNames[0] AND1 :: hNamesInv[AND1] 0
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] Width of AND1 = 32
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Condition :: false :: Type :: AND 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name AND1 :: applicationOpcode AND :: GNode Lock 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] hNames[1] INPUT1 :: hNamesInv[INPUT1] 1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] Width of INPUT1 = 32
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Condition :: false :: Type :: INPUT 
[2024-11-08 23:24:43.650] [UGRAMM] [trace]  [Locking] : Found hNames INPUT1 is substring INPUT1::IO1
[2024-11-08 23:24:43.650] [UGRAMM] [info] [Success] Application DFG node INPUT1 has one-to-one lock to the device model node IO1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name INPUT1 :: applicationOpcode INPUT :: GNode Lock IO1 :: GNode Lock ID 1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name INPUT1 :: applicationOpcode INPUT :: GNode Lock IO1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] hNames[2] INPUT2 :: hNamesInv[INPUT2] 2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] Width of INPUT2 = 32
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Condition :: false :: Type :: INPUT 
[2024-11-08 23:24:43.650] [UGRAMM] [trace]  [Locking] : Found hNames INPUT2 is substring INPUT2::IO2
[2024-11-08 23:24:43.650] [UGRAMM] [info] [Success] Application DFG node INPUT2 has one-to-one lock to the device model node IO2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name INPUT2 :: applicationOpcode INPUT :: GNode Lock IO2 :: GNode Lock ID 10
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name INPUT2 :: applicationOpcode INPUT :: GNode Lock IO2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] hNames[3] OUTPUT1 :: hNamesInv[OUTPUT1] 3
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] Width of OUTPUT1 = 32
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Condition :: false :: Type :: OUTPUT 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] name OUTPUT1 :: applicationOpcode OUTPUT :: GNode Lock 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] [BEFORE alias insertion ]edge from INPUT1 | OUTPINA -> AND1 | INPINA
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] [BEFORE alias insertion ]edge from INPUT2 | OUTPINA -> AND1 | INPINB
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [H] [BEFORE alias insertion ]edge from AND1 | OUTPINA -> OUTPUT1 | INPINA
[2024-11-08 23:24:43.650] [DRC Checks] [info] --------------------------------------------------
[2024-11-08 23:24:43.650] [DRC Checks] [info] Executing DRC Rules Check
[2024-11-08 23:24:43.650] [DRC Checks] [info] --------------------------------------------------
[2024-11-08 23:24:43.650] [UGRAMM] [trace] IO node from device model supports INPUT Opcode
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [trace] IO node from device model supports INPUT Opcode
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [DRC Checks] [info] --------------------------------------------------
[2024-11-08 23:24:43.650] [DRC Checks] [info] DRC Passed --- Continueing to UGRAMM Mapping
[2024-11-08 23:24:43.650] [DRC Checks] [info] --------------------------------------------------
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Ordering[0]: 0 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Ordering[1]: 1 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Ordering[2]: 2 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Ordering[3]: 3 
[2024-11-08 23:24:43.650] [UGRAMM] [debug] 


[2024-11-08 23:24:43.650] [UGRAMM] [info] ***** BEGINNING OUTER WHILE LOOP ***** ITER 1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Afer sortlist (sort) Interation 1 | Ordering[0]: 2 | hNames[2]: INPUT2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Afer sortlist (sort) Interation 1 | Ordering[1]: 3 | hNames[3]: OUTPUT1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Afer sortlist (sort) Interation 1 | Ordering[2]: 0 | hNames[0]: AND1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Afer sortlist (sort) Interation 1 | Ordering[3]: 1 | hNames[1]: INPUT1
[2024-11-08 23:24:43.650] [UGRAMM] [debug] 

[2024-11-08 23:24:43.650] [UGRAMM] [debug] --------------------- New Vertices Mapping Start ---------------------------
[2024-11-08 23:24:43.650] [UGRAMM] [debug] Finding vertex model for: INPUT2 with Current vertex-size: 0
[2024-11-08 23:24:43.650] [UGRAMM] [trace] IO node from device model supports INPUT Opcode
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [debug] [RandomSelection] for application node :: INPUT2 :: Choosing starting vertex model as :: IO3
[2024-11-08 23:24:43.650] [UGRAMM] [debug] 

[2024-11-08 23:24:43.650] [UGRAMM] [debug] --------------------- New Vertices Mapping Start ---------------------------
[2024-11-08 23:24:43.650] [UGRAMM] [debug] Finding vertex model for: OUTPUT1 with Current vertex-size: 0
[2024-11-08 23:24:43.650] [UGRAMM] [trace] IO node from device model supports OUTPUT Opcode
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [debug] [RandomSelection] for application node :: OUTPUT1 :: Choosing starting vertex model as :: IO2
[2024-11-08 23:24:43.650] [UGRAMM] [debug] 

[2024-11-08 23:24:43.650] [UGRAMM] [debug] --------------------- New Vertices Mapping Start ---------------------------
[2024-11-08 23:24:43.650] [UGRAMM] [debug] Finding vertex model for: AND1 with Current vertex-size: 0
[2024-11-08 23:24:43.650] [UGRAMM] [trace] [Locking] LockGNode  :: Not Empty false
[2024-11-08 23:24:43.650] [UGRAMM] [trace] GATE node from device model supports AND Opcode
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [trace] BEGINNING ROUTE OF NAME : AND1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
For AND1::  Set item: INPINA :: 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [debug] For AND1 || Found IO2.INPINA|INPINA in driverPinList : inPinA
[2024-11-08 23:24:43.650] [UGRAMM] [debug] ROUTING => hSOURCE : AND1 :: hTARGET :  || dSource : GATE1.OUTPINA dTarget : IO2.INPINA || SOURCE-Pin : OUTPINA :: TARGET-Pin-List : inPinA 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] EXPANSION SOURCE : GATE1.OUTPINA
[2024-11-08 23:24:43.650] [UGRAMM] [trace] EXPANSION TARGET : IO2.INPINA
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Popped element: 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] PRQ POP COST: 0
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [trace] For AND1 :: Cost of popped node: GATE1.OUTPINA | 0 :: Cost of next node: REG1 | 1 :: Accumulated cost: 1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Popped element: 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] PRQ POP COST: 1
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [trace] For AND1 :: Cost of popped node: REG1 | 1 :: Cost of next node: IO3.INPINA | 1 :: Accumulated cost: 2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Popped element: 
[2024-11-08 23:24:43.650] [UGRAMM] [trace] PRQ POP COST: 2
[2024-11-08 23:24:43.650] [UGRAMM] [trace] The width required by application-graph [32] is supported by device-model graph[32]
[2024-11-08 23:24:43.650] [UGRAMM] [trace] Skipped the routing for this application node AND1 due to high cost
[2024-11-08 23:24:43.650] [UGRAMM] [debug] ** routing for i: 0 AND1 
[2024-11-08 23:24:43.650] [UGRAMM] [debug] 	 3 	 GATE1.OUTPINA
[2024-11-08 23:24:43.650] [UGRAMM] [debug] For application node AND1 :: routing for location [GATE1] has cost 10000001
[2024-11-08 23:24:43.650] [UGRAMM] [error] FATAL ERROR -- COULD NOT FIND A VERTEX MODEL FOR VERTEX 0 AND1
[2024-11-08 23:24:43.650] [UGRAMM] [error] Nodes in the device model does not supports AND Opcode
