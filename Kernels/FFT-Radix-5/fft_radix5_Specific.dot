/*
{
    "ALU" : ["FADD", "FMUL"],
    "MEMPORT"  : ["input", "output"],
    "Constant" : ["const"]
}
*/

strict digraph "omp.inner.for.body" {
label="omp.inner.for.body";
Load_0 [data=in_re, label="{Load_0}", opcode=INPUT, width=32];
Load_1 [data=in_im, label="{Load_1}", opcode=INPUT, width=32];
Load_2 [data=in_re, label="{Load_2}", opcode=INPUT, width=32];
Load_3 [data=in_im, label="{Load_3}", opcode=INPUT, width=32];
Load_4 [data=in_re, label="{Load_4}", opcode=INPUT, width=32];
Load_5 [data=in_im, label="{Load_5}", opcode=INPUT, width=32];
Load_6 [data=in_re, label="{Load_6}", opcode=INPUT, width=32];
Load_7 [data=in_im, label="{Load_7}", opcode=INPUT, width=32];
Load_8 [data=in_re, label="{Load_8}", opcode=INPUT, width=32];
Load_9 [data=in_im, label="{Load_9}", opcode=INPUT, width=32];
fadd_21 [label="{fadd_21}", opcode=FADD, width=32];
fsub_20 [label="{fsub_20}", opcode=FADD, width=32];
fadd_23 [label="{fadd_23}", opcode=FADD, width=32];
fsub_22 [label="{fsub_22}", opcode=FADD, width=32];
fadd_24 [label="{fadd_24}", opcode=FADD, width=32];
fadd_25 [label="{fadd_25}", opcode=FADD, width=32];
fadd_26 [label="{fadd_26}", opcode=FADD, width=32];
fadd_27 [label="{fadd_27}", opcode=FADD, width=32];
Store_50 [data=out_re, label="{Store_50}", opcode=OUTPUT, width=32];
fsub_48 [label="{fsub_48}", opcode=FADD, width=32];
fadd_49 [label="{fadd_49}", opcode=FADD, width=32];
Store_53 [data=out_im, label="{Store_53}", opcode=OUTPUT, width=32];
fsub_51 [label="{fsub_51}", opcode=FADD, width=32];
fadd_52 [label="{fadd_52}", opcode=FADD, width=32];
fsub_55 [label="{fsub_55}", opcode=FADD, width=32];
fadd_54 [label="{fadd_54}", opcode=FADD, width=32];
fsub_57 [label="{fsub_57}", opcode=FADD, width=32];
fadd_56 [label="{fadd_56}", opcode=FADD, width=32];
fmul_36 [label="{fmul_36}", opcode=FMUL, width=32];
fmul_41 [label="{fmul_41}", opcode=FMUL, width=32];
fmul_35 [label="{fmul_35}", opcode=FMUL, width=32];
fmul_30 [label="{fmul_30}", opcode=FMUL, width=32];
fmul_33 [label="{fmul_33}", opcode=FMUL, width=32];
fmul_28 [label="{fmul_28}", opcode=FMUL, width=32];
fmul_42 [label="{fmul_42}", opcode=FMUL, width=32];
fmul_45 [label="{fmul_45}", opcode=FMUL, width=32];
fmul_40 [label="{fmul_40}", opcode=FMUL, width=32];
fmul_37 [label="{fmul_37}", opcode=FMUL, width=32];
fmul_31 [label="{fmul_31}", opcode=FMUL, width=32];
fmul_34 [label="{fmul_34}", opcode=FMUL, width=32];
fmul_29 [label="{fmul_29}", opcode=FMUL, width=32];
fmul_32 [label="{fmul_32}", opcode=FMUL, width=32];
fmul_44 [label="{fmul_44}", opcode=FMUL, width=32];
fmul_43 [label="{fmul_43}", opcode=FMUL, width=32];
fmul_47 [label="{fmul_47}", opcode=FMUL, width=32];
fmul_39 [label="{fmul_39}", opcode=FMUL, width=32];
fmul_46 [label="{fmul_46}", opcode=FMUL, width=32];
fmul_38 [label="{fmul_38}", opcode=FMUL, width=32];
fadd_62 [label="{fadd_62}", opcode=FADD, width=32];
fsub_63 [label="{fsub_63}", opcode=FADD, width=32];
fadd_61 [label="{fadd_61}", opcode=FADD, width=32];
fsub_60 [label="{fsub_60}", opcode=FADD, width=32];
fadd_59 [label="{fadd_59}", opcode=FADD, width=32];
fsub_58 [label="{fsub_58}", opcode=FADD, width=32];
fadd_64 [label="{fadd_64}", opcode=FADD, width=32];
fsub_65 [label="{fsub_65}", opcode=FADD, width=32];
Store_70 [data=out_im, label="{Store_70}", opcode=OUTPUT, width=32];
Store_71 [data=out_re, label="{Store_71}", opcode=OUTPUT, width=32];
Store_69 [data=out_im, label="{Store_69}", opcode=OUTPUT, width=32];
Store_68 [data=out_re, label="{Store_68}", opcode=OUTPUT, width=32];
Store_67 [data=out_im, label="{Store_67}", opcode=OUTPUT, width=32];
Store_66 [data=out_re, label="{Store_66}", opcode=OUTPUT, width=32];
Store_72 [data=out_im, label="{Store_72}", opcode=OUTPUT, width=32];
Store_73 [data=out_re, label="{Store_73}", opcode=OUTPUT, width=32];
Const_75 [constVal="1", int64="0", label="{Const_10|int64=\"data(W3_re)\"}", opcode=CONST, width=32];
Const_76 [constVal="1", int64="0", label="{Const_10|int64=\"data(W3_re)\"}", opcode=CONST, width=32];
Const_77 [constVal="1", int64="0", label="{Const_11|int64=\"data(W1_re)\"}", opcode=CONST, width=32];
Const_78 [constVal="1", int64="0", label="{Const_11|int64=\"data(W1_re)\"}", opcode=CONST, width=32];
Const_79 [constVal="1", int64="0", label="{Const_12|int64=\"data(W3_im)\"}", opcode=CONST, width=32];
Const_80 [constVal="1", int64="0", label="{Const_12|int64=\"data(W3_im)\"}", opcode=CONST, width=32];
Const_81 [constVal="1", int64="0", label="{Const_13|int64=\"data(W1_im)\"}", opcode=CONST, width=32];
Const_82 [constVal="1", int64="0", label="{Const_13|int64=\"data(W1_im)\"}", opcode=CONST, width=32];
Const_83 [constVal="1", int64="0", label="{Const_14|int64=\"data(W2_im)\"}", opcode=CONST, width=32];
Const_84 [constVal="1", int64="0", label="{Const_14|int64=\"data(W2_im)\"}", opcode=CONST, width=32];
Const_85 [constVal="1", float32="0.25", label="{Const_15|float32=0.25}", opcode=CONST, width=32];
Const_86 [constVal="1", float32="0.25", label="{Const_15|float32=0.25}", opcode=CONST, width=32];
Const_87 [constVal="1", int64="0", label="{Const_16|int64=\"data(W2_re)\"}", opcode=CONST, width=32];
Const_88 [constVal="1", int64="0", label="{Const_16|int64=\"data(W2_re)\"}", opcode=CONST, width=32];
Const_89 [constVal="1", int64="0", label="{Const_17|int64=\"data(W0_im)\"}", opcode=CONST, width=32];
Const_90 [constVal="1", int64="0", label="{Const_17|int64=\"data(W0_im)\"}", opcode=CONST, width=32];
Const_91 [constVal="1", int64="0", label="{Const_18|int64=\"data(W0_re)\"}", opcode=CONST, width=32];
Const_92 [constVal="1", int64="0", label="{Const_18|int64=\"data(W0_re)\"}", opcode=CONST, width=32];
Const_93 [constVal="1", float32="0.56", label="{Const_19|float32=0.56}", opcode=CONST, width=32];
Const_94 [constVal="1", float32="0.56", label="{Const_19|float32=0.56}", opcode=CONST, width=32];
Load_0 -> fsub_20  [driver=outPinA, load=inPinB];
Load_0 -> fadd_21  [driver=outPinA, load=inPinB];
Load_1 -> fsub_22  [driver=outPinA, load=inPinB];
Load_1 -> fadd_23  [driver=outPinA, load=inPinB];
Load_2 -> fadd_24  [driver=outPinA, load=inPinB];
Load_3 -> fadd_25  [driver=outPinA, load=inPinB];
Load_4 -> fadd_26  [driver=outPinA, load=inPinB];
Load_5 -> fadd_27  [driver=outPinA, load=inPinB];
Load_6 -> fadd_26  [driver=outPinA, load=inPinA];
Load_7 -> fadd_27  [driver=outPinA, load=inPinA];
Load_8 -> fadd_24  [driver=outPinA, load=inPinA];
Load_9 -> fadd_25  [driver=outPinA, load=inPinA];
fadd_21 -> Store_50  [driver=outPinA, load=inPinA];
fsub_20 -> fsub_48  [driver=outPinA, load=inPinB];
fsub_20 -> fadd_49  [driver=outPinA, load=inPinB];
fadd_23 -> Store_53  [driver=outPinA, load=inPinA];
fsub_22 -> fsub_51  [driver=outPinA, load=inPinB];
fsub_22 -> fadd_52  [driver=outPinA, load=inPinB];
fadd_24 -> fadd_54  [driver=outPinA, load=inPinB];
fadd_24 -> fsub_55  [driver=outPinA, load=inPinB];
fadd_25 -> fadd_56  [driver=outPinA, load=inPinB];
fadd_25 -> fsub_57  [driver=outPinA, load=inPinB];
fadd_26 -> fadd_54  [driver=outPinA, load=inPinA];
fadd_26 -> fsub_55  [driver=outPinA, load=inPinA];
fadd_27 -> fadd_56  [driver=outPinA, load=inPinA];
fadd_27 -> fsub_57  [driver=outPinA, load=inPinA];
fsub_48 -> fmul_30  [driver=outPinA, load=inPinB];
fsub_48 -> fmul_36  [driver=outPinA, load=inPinB];
fsub_48 -> fmul_41  [driver=outPinA, load=inPinB];
fsub_48 -> fmul_35  [driver=outPinA, load=inPinB];
fadd_49 -> fmul_28  [driver=outPinA, load=inPinB];
fadd_49 -> fmul_42  [driver=outPinA, load=inPinB];
fadd_49 -> fmul_45  [driver=outPinA, load=inPinB];
fadd_49 -> fmul_33  [driver=outPinA, load=inPinB];
fsub_51 -> fmul_34  [driver=outPinA, load=inPinB];
fsub_51 -> fmul_40  [driver=outPinA, load=inPinB];
fsub_51 -> fmul_37  [driver=outPinA, load=inPinB];
fsub_51 -> fmul_31  [driver=outPinA, load=inPinB];
fadd_52 -> fmul_32  [driver=outPinA, load=inPinB];
fadd_52 -> fmul_44  [driver=outPinA, load=inPinB];
fadd_52 -> fmul_43  [driver=outPinA, load=inPinB];
fadd_52 -> fmul_29  [driver=outPinA, load=inPinB];
fsub_55 -> fmul_47  [driver=outPinA, load=inPinB];
fadd_54 -> fmul_39  [driver=outPinA, load=inPinB];
fadd_54 -> fadd_21  [driver=outPinA, load=inPinA];
fsub_57 -> fmul_46  [driver=outPinA, load=inPinB];
fadd_56 -> fmul_38  [driver=outPinA, load=inPinB];
fadd_56 -> fadd_23  [driver=outPinA, load=inPinA];
fmul_36 -> fadd_62  [driver=outPinA, load=inPinB];
fmul_41 -> fsub_63  [driver=outPinA, load=inPinB];
fmul_35 -> fadd_61  [driver=outPinA, load=inPinB];
fmul_30 -> fsub_60  [driver=outPinA, load=inPinB];
fmul_33 -> fadd_59  [driver=outPinA, load=inPinB];
fmul_28 -> fsub_58  [driver=outPinA, load=inPinB];
fmul_42 -> fadd_64  [driver=outPinA, load=inPinB];
fmul_45 -> fsub_65  [driver=outPinA, load=inPinB];
fmul_40 -> fadd_62  [driver=outPinA, load=inPinA];
fmul_37 -> fsub_63  [driver=outPinA, load=inPinA];
fmul_31 -> fadd_61  [driver=outPinA, load=inPinA];
fmul_34 -> fsub_60  [driver=outPinA, load=inPinA];
fmul_29 -> fadd_59  [driver=outPinA, load=inPinA];
fmul_32 -> fsub_58  [driver=outPinA, load=inPinA];
fmul_44 -> fadd_64  [driver=outPinA, load=inPinA];
fmul_43 -> fsub_65  [driver=outPinA, load=inPinA];
fmul_47 -> fsub_48  [driver=outPinA, load=inPinA];
fmul_47 -> fadd_49  [driver=outPinA, load=inPinA];
fmul_39 -> fsub_20  [driver=outPinA, load=inPinA];
fmul_46 -> fsub_51  [driver=outPinA, load=inPinA];
fmul_46 -> fadd_52  [driver=outPinA, load=inPinA];
fmul_38 -> fsub_22  [driver=outPinA, load=inPinA];
fadd_62 -> Store_70  [driver=outPinA, load=inPinA];
fsub_63 -> Store_71  [driver=outPinA, load=inPinA];
fadd_61 -> Store_69  [driver=outPinA, load=inPinA];
fsub_60 -> Store_68  [driver=outPinA, load=inPinA];
fadd_59 -> Store_67  [driver=outPinA, load=inPinA];
fsub_58 -> Store_66  [driver=outPinA, load=inPinA];
fadd_64 -> Store_72  [driver=outPinA, load=inPinA];
fsub_65 -> Store_73  [driver=outPinA, load=inPinA];
Const_75 -> fmul_28  [driver=outPinA, load=inPinA];
Const_76 -> fmul_29  [driver=outPinA, load=inPinA];
Const_77 -> fmul_30  [driver=outPinA, load=inPinA];
Const_78 -> fmul_31  [driver=outPinA, load=inPinA];
Const_79 -> fmul_32  [driver=outPinA, load=inPinA];
Const_80 -> fmul_33  [driver=outPinA, load=inPinA];
Const_81 -> fmul_34  [driver=outPinA, load=inPinA];
Const_82 -> fmul_35  [driver=outPinA, load=inPinA];
Const_83 -> fmul_36  [driver=outPinA, load=inPinA];
Const_84 -> fmul_37  [driver=outPinA, load=inPinA];
Const_85 -> fmul_38  [driver=outPinA, load=inPinA];
Const_86 -> fmul_39  [driver=outPinA, load=inPinA];
Const_87 -> fmul_40  [driver=outPinA, load=inPinA];
Const_88 -> fmul_41  [driver=outPinA, load=inPinA];
Const_89 -> fmul_42  [driver=outPinA, load=inPinA];
Const_90 -> fmul_43  [driver=outPinA, load=inPinA];
Const_91 -> fmul_44  [driver=outPinA, load=inPinA];
Const_92 -> fmul_45  [driver=outPinA, load=inPinA];
Const_93 -> fmul_46  [driver=outPinA, load=inPinA];
Const_94 -> fmul_47  [driver=outPinA, load=inPinA];
}
