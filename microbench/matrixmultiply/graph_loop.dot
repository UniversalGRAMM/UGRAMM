digraph G {
    const0 [opcode=const, constVal="0"];
    i0_phi [opcode=phi];
    const1 [opcode=const, constVal="0"];
    i1_phi [opcode=phi];
    const2 [opcode=const, constVal="2560"];
    i3_data_size1 [opcode=const, constVal="80"];
    input0 [opcode=input];
    i3_mul1 [opcode=mul];
    i3_add1 [opcode=add];
    i3_data_size2 [opcode=const, constVal="4"];
    i3_mul2 [opcode=mul];
    i3_add2 [opcode=add];
    i4_load [opcode=load];
    const3 [opcode=const, constVal="2816"];
    i5_data_size1 [opcode=const, constVal="80"];
    i5_mul1 [opcode=mul];
    i5_add1 [opcode=add];
    i5_data_size2 [opcode=const, constVal="4"];
    input1 [opcode=input];
    i5_mul2 [opcode=mul];
    i5_add2 [opcode=add];
    i6_load [opcode=load];
    i7_mul [opcode=mul];
    i8_add [opcode=add];
    const4 [opcode=const, constVal="1"];
    i9_add [opcode=add];
    const5 [opcode=const, constVal="20"];
    i10_icmp [opcode=icmp];
    bb0 [opcode=input];
    bb1 [opcode=input];
    i11_br [opcode=br];
    i8_output [opcode=output];
    const0 -> i0_phi [operand=LHS];
    i0_phi -> i3_mul2 [operand=any2input];
    i0_phi -> i5_mul1 [operand=any2input];
    i0_phi -> i9_add [operand=any2input];
    const1 -> i1_phi [operand=LHS];
    i1_phi -> i8_add [operand=any2input];
    const2 -> i3_add1 [operand=any2input];
    i3_data_size1 -> i3_mul1 [operand=any2input];
    input0 -> i3_mul1 [operand=any2input];
    i3_mul1 -> i3_add1 [operand=any2input];
    i3_add1 -> i3_add2 [operand=any2input];
    i3_data_size2 -> i3_mul2 [operand=any2input];
    i3_mul2 -> i3_add2 [operand=any2input];
    i3_add2 -> i4_load [operand=addr];
    i4_load -> i7_mul [operand=any2input];
    const3 -> i5_add1 [operand=any2input];
    i5_data_size1 -> i5_mul1 [operand=any2input];
    i5_mul1 -> i5_add1 [operand=any2input];
    i5_add1 -> i5_add2 [operand=any2input];
    i5_data_size2 -> i5_mul2 [operand=any2input];
    input1 -> i5_mul2 [operand=any2input];
    i5_mul2 -> i5_add2 [operand=any2input];
    i5_add2 -> i6_load [operand=addr];
    i6_load -> i7_mul [operand=any2input];
    i7_mul -> i8_add [operand=any2input];
    i8_add -> i1_phi [operand=RHS];
    i8_add -> i8_output;
    const4 -> i9_add [operand=any2input];
    i9_add -> i0_phi [operand=RHS];
    i9_add -> i10_icmp [operand=LHS];
    const5 -> i10_icmp [operand=RHS];
    i10_icmp -> i11_br [operand=branch_cond];
    bb0 -> i11_br [operand=branch_true];
    bb1 -> i11_br [operand=branch_false];
}
