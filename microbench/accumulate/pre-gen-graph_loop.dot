digraph G {
    const0 [opcode=const, constVal="1"];
    i0_phi [opcode=phi];
    const1 [opcode=const, constVal="0"];
    i1_phi [opcode=phi];
    i3_add [opcode=add];
    const2 [opcode=const, constVal="2560"];
    i4_data_size1 [opcode=const, constVal="4"];
    i4_mul1 [opcode=mul];
    i4_add1 [opcode=add];
    i5_load [opcode=load];
    const3 [opcode=const, constVal="-1"];
    i6_add [opcode=add];
    const4 [opcode=const, constVal="2816"];
    i7_data_size1 [opcode=const, constVal="4"];
    i7_mul1 [opcode=mul];
    i7_add1 [opcode=add];
    i8_load [opcode=load];
    i9_add [opcode=add];
    const5 [opcode=const, constVal="3072"];
    i10_data_size1 [opcode=const, constVal="4"];
    i10_mul1 [opcode=mul];
    i10_add1 [opcode=add];
    i11_load [opcode=load];
    i12_mul [opcode=mul];
    i13_store [opcode=store];
    i14_add [opcode=add];
    input0 [opcode=input];
    i15_icmp [opcode=icmp];
    bb0 [opcode=input];
    bb1 [opcode=input];
    i16_br [opcode=br];
    i14_output [opcode=output];
    const0 -> i0_phi [operand=LHS];
    const0 -> i3_add [operand=any2input];
    i0_phi -> i3_add [operand=any2input];
    i0_phi -> i6_add [operand=any2input];
    i0_phi -> i10_mul1 [operand=any2input];
    const1 -> i1_phi [operand=LHS];
    i1_phi -> i14_add [operand=any2input];
    i3_add -> i0_phi [operand=RHS];
    i3_add -> i4_mul1 [operand=any2input];
    i3_add -> i15_icmp [operand=LHS];
    const2 -> i4_add1 [operand=any2input];
    i4_data_size1 -> i4_mul1 [operand=any2input];
    i4_mul1 -> i4_add1 [operand=any2input];
    i4_add1 -> i5_load [operand=addr];
    i5_load -> i9_add [operand=any2input];
    const3 -> i6_add [operand=any2input];
    i6_add -> i7_mul1 [operand=any2input];
    const4 -> i7_add1 [operand=any2input];
    i7_data_size1 -> i7_mul1 [operand=any2input];
    i7_mul1 -> i7_add1 [operand=any2input];
    i7_add1 -> i8_load [operand=addr];
    i8_load -> i9_add [operand=any2input];
    i9_add -> i12_mul [operand=any2input];
    const5 -> i10_add1 [operand=any2input];
    i10_data_size1 -> i10_mul1 [operand=any2input];
    i10_mul1 -> i10_add1 [operand=any2input];
    i10_add1 -> i11_load [operand=addr];
    i10_add1 -> i13_store [operand=addr];
    i11_load -> i12_mul [operand=any2input];
    i12_mul -> i13_store [operand=data];
    i12_mul -> i14_add [operand=any2input];
    i14_add -> i1_phi [operand=RHS];
    i14_add -> i14_output;
    input0 -> i15_icmp [operand=RHS];
    i15_icmp -> i16_br [operand=branch_cond];
    bb0 -> i16_br [operand=branch_true];
    bb1 -> i16_br [operand=branch_false];
}
