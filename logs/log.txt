---------------------Generating device model using external script:---------------------
cd scripts && ./device_model_gen.py -NR 8 -NC 8 -Arch RIKEN_with_pins && cd ..
====================================================
============ Universal GRAMM (UGRAMM) ==============
======= helper script: Device Model Generator ======
====================================================

Generating device model for the following CGRA configuration: 
> Arch: RIKEN_with_pins
> NR: 8
> NC: 8
Creating RIKEN_with_pins architecture!!
 
 
---------------------Executing GRAMM and producing mapping result in ordered_dot_output.dot & unpositioned_dot_output---------------------
make && ./GRAMM Kernels_Modified/Conv_Balance/conv_nounroll_Balance_Tester_Fanout.dot scripts/riken_8_8.dot 8 8 0
mkdir -p build
g++ -Ilib -lboost_graph -c src/GRAMM.cpp -o build/GRAMM.o
mkdir -p build
g++ -Ilib -lboost_graph -c src/utilities.cpp -o build/utilities.o
g++ build/GRAMM.o build/utilities.o -Ilib -lboost_graph -o GRAMM
***** BEGINNING OUTER WHILE LOOP ***** ITER 1 
OVERUSE 1 ON OVERUSE 1 ON OVERUSE 1 ON OVERUSE 1 ON TOTAL OVERUSE: 4
***** BEGINNING OUTER WHILE LOOP ***** ITER 2 
TOTAL OVERUSE: 0
FRACTION OVERLAP: 0
SUCCESS! 2 0 35
** routing for i: 0 {Const_27|float32=5.00}
	 59	 pe.w32.c7.r7.const
	 60	 pe.w32.c7.r7.const.outPinA
	 57	 pe.w32.c7.r7.mux_b
	 63	 pe.w32.c7.r7.alu.inPinB
** routing for i: 1 {Const_28|float32=13.00}
	 737	 pe.w32.c4.r5.const
	 738	 pe.w32.c4.r5.const.outPinA
	 736	 pe.w32.c4.r5.mux_b
	 741	 pe.w32.c4.r5.alu.inPinB
** routing for i: 2 {Const_29|float32=9.00}
	 917	 pe.w32.c5.r6.const
	 918	 pe.w32.c5.r6.const.outPinA
	 915	 pe.w32.c5.r6.mux_a
	 920	 pe.w32.c5.r6.alu.inPinA
** routing for i: 3 {Const_30|float32=11.00}
	 277	 pe.w32.c1.r6.const
	 278	 pe.w32.c1.r6.const.outPinA
	 276	 pe.w32.c1.r6.mux_b
	 282	 pe.w32.c1.r6.alu.inPinB
** routing for i: 4 {Const_31|float32=3.00}
	 976	 pe.w32.c6.r1.const
	 977	 pe.w32.c6.r1.const.outPinA
	 975	 pe.w32.c6.r1.mux_b
	 982	 pe.w32.c6.r1.alu.inPinB
** routing for i: 5 {Const_33|float32=17.00}
	 538	 pe.w32.c3.r3.const
	 539	 pe.w32.c3.r3.const.outPinA
	 537	 pe.w32.c3.r3.mux_b
	 542	 pe.w32.c3.r3.alu.inPinB
** routing for i: 6 {Const_34|float32=7.00}
	 318	 pe.w32.c2.r0.const
	 319	 pe.w32.c2.r0.const.outPinA
	 317	 pe.w32.c2.r0.mux_b
	 322	 pe.w32.c2.r0.alu.inPinB
** routing for i: 7 {Const_35|float32=19.00}
	 139	 pe.w32.c8.r3.const
	 140	 pe.w32.c8.r3.const.outPinA
	 138	 pe.w32.c8.r3.mux_b
	 143	 pe.w32.c8.r3.alu.inPinB
** routing for i: 8 {FADD_18}
	 859	 pe.w32.c5.r3.alu
	 862	 pe.w32.c5.r3.alu.outPinA
	 843	 pe.w32.c5.r3.crossbar_mux_0
	 1005	 pe.w32.c6.r3.crossbar_mux_1
	 1153	 pe.w32.c7.r2.crossbar_mux_9
	 1155	 pe.w32.c7.r2.mux_b
	 1161	 pe.w32.c7.r2.alu.inPinB
** routing for i: 9 {FADD_19}
	 1039	 pe.w32.c6.r4.alu
	 1042	 pe.w32.c6.r4.alu.outPinA
	 1025	 pe.w32.c6.r4.crossbar_mux_1
	 1165	 pe.w32.c7.r3.crossbar_mux_2
	 1152	 pe.w32.c7.r2.crossbar_mux_8
	 1154	 pe.w32.c7.r2.mux_a
	 1160	 pe.w32.c7.r2.alu.inPinA
** routing for i: 10 {FADD_20}
	 1019	 pe.w32.c6.r3.alu
	 1022	 pe.w32.c6.r3.alu.outPinA
	 1008	 pe.w32.c6.r3.crossbar_mux_4
	 853	 pe.w32.c5.r3.crossbar_mux_9
	 855	 pe.w32.c5.r3.mux_b
	 861	 pe.w32.c5.r3.alu.inPinB
** routing for i: 11 {FADD_21}
	 699	 pe.w32.c4.r3.alu
	 703	 pe.w32.c4.r3.alu.outPinA
	 692	 pe.w32.c4.r3.crossbar_mux_7
	 863	 pe.w32.c5.r4.crossbar_mux_0
	 1033	 pe.w32.c6.r4.crossbar_mux_9
	 1036	 pe.w32.c6.r4.mux_b
	 1041	 pe.w32.c6.r4.alu.inPinB
** routing for i: 12 {FADD_22}
	 999	 pe.w32.c6.r2.alu
	 1003	 pe.w32.c6.r2.alu.outPinA
	 989	 pe.w32.c6.r2.crossbar_mux_5
	 852	 pe.w32.c5.r3.crossbar_mux_8
	 854	 pe.w32.c5.r3.mux_a
	 860	 pe.w32.c5.r3.alu.inPinA
** routing for i: 13 {FADD_23}
	 899	 pe.w32.c5.r5.alu
	 903	 pe.w32.c5.r5.alu.outPinA
	 885	 pe.w32.c5.r5.crossbar_mux_1
	 1032	 pe.w32.c6.r4.crossbar_mux_8
	 1035	 pe.w32.c6.r4.mux_a
	 1040	 pe.w32.c6.r4.alu.inPinA
** routing for i: 14 {FADD_24}
	 1198	 pe.w32.c7.r4.alu
	 5	 pe.w32.c7.r4.alu.outPinA
	 1186	 pe.w32.c7.r4.crossbar_mux_3
	 1014	 pe.w32.c6.r3.crossbar_mux_9
	 1016	 pe.w32.c6.r3.mux_b
	 1021	 pe.w32.c6.r3.alu.inPinB
** routing for i: 15 {FADD_25}
	 1159	 pe.w32.c7.r2.alu
	 1162	 pe.w32.c7.r2.alu.outPinA
	 1144	 pe.w32.c7.r2.crossbar_mux_1
	 87	 pe.w32.c8.r1.crossbar_mux_2
	 75	 pe.w32.c8.r0.crossbar_mux_9
	 335	 LS.w32.c0.r7.memport.inPinA
** routing for i: 16 {FMUL_10}
	 61	 pe.w32.c7.r7.alu
	 64	 pe.w32.c7.r7.alu.outPinA
	 49	 pe.w32.c7.r7.crossbar_mux_3
	 1066	 pe.w32.c6.r6.crossbar_mux_3
	 893	 pe.w32.c5.r5.crossbar_mux_8
	 895	 pe.w32.c5.r5.mux_a
	 900	 pe.w32.c5.r5.alu.inPinA
** routing for i: 17 {FMUL_11}
	 320	 pe.w32.c2.r0.alu
	 323	 pe.w32.c2.r0.alu.outPinA
	 311	 pe.w32.c2.r0.crossbar_mux_7
	 492	 pe.w32.c3.r1.crossbar_mux_7
	 672	 pe.w32.c4.r2.crossbar_mux_7
	 850	 pe.w32.c5.r3.crossbar_mux_6
	 871	 pe.w32.c5.r4.crossbar_mux_6
	 894	 pe.w32.c5.r5.crossbar_mux_9
	 896	 pe.w32.c5.r5.mux_b
	 902	 pe.w32.c5.r5.alu.inPinB
** routing for i: 18 {FMUL_12}
	 919	 pe.w32.c5.r6.alu
	 922	 pe.w32.c5.r6.alu.outPinA
	 905	 pe.w32.c5.r6.crossbar_mux_1
	 1046	 pe.w32.c6.r5.crossbar_mux_2
	 1026	 pe.w32.c6.r4.crossbar_mux_2
	 1006	 pe.w32.c6.r3.crossbar_mux_2
	 994	 pe.w32.c6.r2.crossbar_mux_9
	 996	 pe.w32.c6.r2.mux_b
	 1002	 pe.w32.c6.r2.alu.inPinB
** routing for i: 19 {FMUL_13}
	 280	 pe.w32.c1.r6.alu
	 283	 pe.w32.c1.r6.alu.outPinA
	 265	 pe.w32.c1.r6.crossbar_mux_1
	 405	 pe.w32.c2.r5.crossbar_mux_1
	 545	 pe.w32.c3.r4.crossbar_mux_1
	 694	 pe.w32.c4.r3.crossbar_mux_9
	 696	 pe.w32.c4.r3.mux_b
	 702	 pe.w32.c4.r3.alu.inPinB
** routing for i: 20 {FMUL_14}
	 739	 pe.w32.c4.r5.alu
	 742	 pe.w32.c4.r5.alu.outPinA
	 725	 pe.w32.c4.r5.crossbar_mux_1
	 864	 pe.w32.c5.r4.crossbar_mux_1
	 1013	 pe.w32.c6.r3.crossbar_mux_8
	 1015	 pe.w32.c6.r3.mux_a
	 1020	 pe.w32.c6.r3.alu.inPinA
** routing for i: 21 {FMUL_15}
	 41	 pe.w32.c7.r6.alu
	 44	 pe.w32.c7.r6.alu.outPinA
	 29	 pe.w32.c7.r6.crossbar_mux_3
	 1044	 pe.w32.c6.r5.crossbar_mux_1
	 1193	 pe.w32.c7.r4.crossbar_mux_9
	 1195	 pe.w32.c7.r4.mux_b
	 4	 pe.w32.c7.r4.alu.inPinB
** routing for i: 22 {FMUL_16}
	 540	 pe.w32.c3.r3.alu
	 543	 pe.w32.c3.r3.alu.outPinA
	 524	 pe.w32.c3.r3.crossbar_mux_0
	 693	 pe.w32.c4.r3.crossbar_mux_8
	 695	 pe.w32.c4.r3.mux_a
	 700	 pe.w32.c4.r3.alu.inPinA
** routing for i: 23 {FMUL_17}
	 141	 pe.w32.c8.r3.alu
	 144	 pe.w32.c8.r3.alu.outPinA
	 131	 pe.w32.c8.r3.crossbar_mux_5
	 1192	 pe.w32.c7.r4.crossbar_mux_8
	 1194	 pe.w32.c7.r4.mux_a
	 1199	 pe.w32.c7.r4.alu.inPinA
** routing for i: 24 {FMUL_9}
	 980	 pe.w32.c6.r1.alu
	 983	 pe.w32.c6.r1.alu.outPinA
	 970	 pe.w32.c6.r1.crossbar_mux_6
	 993	 pe.w32.c6.r2.crossbar_mux_8
	 995	 pe.w32.c6.r2.mux_a
	 1000	 pe.w32.c6.r2.alu.inPinA
** routing for i: 25 {Load_0}
	 257	 LS.w32.c0.r5.memport
	 279	 LS.w32.c0.r5.memport.outPinA
	 950	 pe.w32.c6.r0.crossbar_mux_6
	 972	 pe.w32.c6.r1.crossbar_mux_8
	 974	 pe.w32.c6.r1.mux_a
	 981	 pe.w32.c6.r1.alu.inPinA
** routing for i: 26 {Load_1}
	 557	 LS.w32.c9.r6.mem
	 579	 LS.w32.c9.r6.mem.outPinA
	 54	 pe.w32.c7.r7.crossbar_mux_8
	 56	 pe.w32.c7.r7.mux_a
	 62	 pe.w32.c7.r7.alu.inPinA
** routing for i: 27 {Load_2}
	 423	 LS.w32.c0.r1.memport
	 645	 LS.w32.c0.r1.memport.outPinA
	 314	 pe.w32.c2.r0.crossbar_mux_8
	 316	 pe.w32.c2.r0.mux_a
	 321	 pe.w32.c2.r0.alu.inPinA
** routing for i: 28 {Load_3}
	 490	 LS.w32.c9.r4.mem
	 512	 LS.w32.c9.r4.mem.outPinA
	 926	 pe.w32.c5.r7.crossbar_mux_2
	 914	 pe.w32.c5.r6.crossbar_mux_9
	 916	 pe.w32.c5.r6.mux_b
	 921	 pe.w32.c5.r6.alu.inPinB
** routing for i: 29 {Load_4}
	 390	 LS.w32.c9.r1.mem
	 412	 LS.w32.c9.r1.mem.outPinA
	 448	 pe.w32.c2.r7.crossbar_mux_3
	 273	 pe.w32.c1.r6.crossbar_mux_8
	 275	 pe.w32.c1.r6.mux_a
	 281	 pe.w32.c1.r6.alu.inPinA
** routing for i: 30 {Load_5}
	 424	 LS.w32.c9.r2.mem
	 446	 LS.w32.c9.r2.mem.outPinA
	 605	 pe.w32.c3.r7.crossbar_mux_1
	 746	 pe.w32.c4.r6.crossbar_mux_2
	 732	 pe.w32.c4.r5.crossbar_mux_8
	 735	 pe.w32.c4.r5.mux_a
	 740	 pe.w32.c4.r5.alu.inPinA
** routing for i: 31 {Load_6}
	 590	 LS.w32.c9.r7.mem
	 612	 LS.w32.c9.r7.mem.outPinA
	 208	 pe.w32.c8.r7.crossbar_mux_3
	 34	 pe.w32.c7.r6.crossbar_mux_8
	 37	 pe.w32.c7.r6.mux_a
	 42	 pe.w32.c7.r6.alu.inPinA
** routing for i: 32 {Load_7}
	 756	 LS.w32.c0.r2.memport
	 978	 LS.w32.c0.r2.memport.outPinA
	 471	 pe.w32.c3.r0.crossbar_mux_6
	 489	 pe.w32.c3.r1.crossbar_mux_5
	 352	 pe.w32.c2.r2.crossbar_mux_7
	 532	 pe.w32.c3.r3.crossbar_mux_8
	 536	 pe.w32.c3.r3.mux_a
	 541	 pe.w32.c3.r3.alu.inPinA
** routing for i: 33 {Load_8}
	 523	 LS.w32.c9.r5.mem
	 546	 LS.w32.c9.r5.mem.outPinA
	 1084	 pe.w32.c6.r7.crossbar_mux_1
	 28	 pe.w32.c7.r6.crossbar_mux_2
	 7	 pe.w32.c7.r5.crossbar_mux_1
	 148	 pe.w32.c8.r4.crossbar_mux_2
	 134	 pe.w32.c8.r3.crossbar_mux_8
	 137	 pe.w32.c8.r3.mux_a
	 142	 pe.w32.c8.r3.alu.inPinA
	 35	 pe.w32.c7.r6.crossbar_mux_9
	 38	 pe.w32.c7.r6.mux_b
	 43	 pe.w32.c7.r6.alu.inPinB
** routing for i: 34 {Store_26}
	 324	 LS.w32.c0.r7.memport
Writing the positioned mapping output in file 'positioned_dot_output.dot' 
Writing the unpositioned mapping output in file 'unpositioned_dot_output.dot' 
pe_w32_c7_r7_const_outPinA -> pe_w32_c7_r7_alu_inPinB
pe_w32_c4_r5_const_outPinA -> pe_w32_c4_r5_alu_inPinB
pe_w32_c5_r6_const_outPinA -> pe_w32_c5_r6_alu_inPinA
pe_w32_c1_r6_const_outPinA -> pe_w32_c1_r6_alu_inPinB
pe_w32_c6_r1_const_outPinA -> pe_w32_c6_r1_alu_inPinB
pe_w32_c3_r3_const_outPinA -> pe_w32_c3_r3_alu_inPinB
pe_w32_c2_r0_const_outPinA -> pe_w32_c2_r0_alu_inPinB
pe_w32_c8_r3_const_outPinA -> pe_w32_c8_r3_alu_inPinB
pe_w32_c5_r3_alu_outPinA -> pe_w32_c7_r2_alu_inPinB
pe_w32_c6_r4_alu_outPinA -> pe_w32_c7_r2_alu_inPinA
pe_w32_c6_r3_alu_outPinA -> pe_w32_c5_r3_alu_inPinB
pe_w32_c4_r3_alu_outPinA -> pe_w32_c6_r4_alu_inPinB
pe_w32_c6_r2_alu_outPinA -> pe_w32_c5_r3_alu_inPinA
pe_w32_c5_r5_alu_outPinA -> pe_w32_c6_r4_alu_inPinA
pe_w32_c7_r4_alu_outPinA -> pe_w32_c6_r3_alu_inPinB
pe_w32_c7_r2_alu_outPinA -> LS_w32_c0_r7_memport_inPinA
pe_w32_c7_r7_alu_outPinA -> pe_w32_c5_r5_alu_inPinA
pe_w32_c2_r0_alu_outPinA -> pe_w32_c5_r5_alu_inPinB
pe_w32_c5_r6_alu_outPinA -> pe_w32_c6_r2_alu_inPinB
pe_w32_c1_r6_alu_outPinA -> pe_w32_c4_r3_alu_inPinB
pe_w32_c4_r5_alu_outPinA -> pe_w32_c6_r3_alu_inPinA
pe_w32_c7_r6_alu_outPinA -> pe_w32_c7_r4_alu_inPinB
pe_w32_c3_r3_alu_outPinA -> pe_w32_c4_r3_alu_inPinA
pe_w32_c8_r3_alu_outPinA -> pe_w32_c7_r4_alu_inPinA
pe_w32_c6_r1_alu_outPinA -> pe_w32_c6_r2_alu_inPinA
LS_w32_c0_r5_memport_outPinA -> pe_w32_c6_r1_alu_inPinA
LS_w32_c9_r6_mem_outPinA -> pe_w32_c7_r7_alu_inPinA
LS_w32_c0_r1_memport_outPinA -> pe_w32_c2_r0_alu_inPinA
LS_w32_c9_r4_mem_outPinA -> pe_w32_c5_r6_alu_inPinB
LS_w32_c9_r1_mem_outPinA -> pe_w32_c1_r6_alu_inPinA
LS_w32_c9_r2_mem_outPinA -> pe_w32_c4_r5_alu_inPinA
LS_w32_c9_r7_mem_outPinA -> pe_w32_c7_r6_alu_inPinA
LS_w32_c0_r2_memport_outPinA -> pe_w32_c3_r3_alu_inPinA
LS_w32_c9_r5_mem_outPinA -> pe_w32_c8_r3_alu_inPinA
LS_w32_c9_r5_mem_outPinA -> pe_w32_c7_r6_alu_inPinB
 
 
---------------------Converting the ordered-mapped  positioned_dot_output.dot file into ordered_dot_output.png:---------------------
neato -Tpng positioned_dot_output.dot -o positioned_dot_output.png
 
 
---------------------Converting the unordered-mapped  unpositioned_dot_output.dot file into unpositioned_dot_output.png:---------------------
neato -Tpng unpositioned_dot_output.dot -o unpositioned_dot_output.png
